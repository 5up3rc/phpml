<?php

namespace phpml\tests\parser;

use phpml\lib\parser\Scanner,
    phpml\lib\parser\File;
    
require_once __DIR__ . '/../bootstrap.php';

/**
 * Test class for Scanner.
 * Generated by PHPUnit on 2010-10-30 at 22:21:40.
 */
class ScannerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Scanner
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        //$this->object = new Scanner(new File('testFiles/find_1'));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testNextToken().
     */
    public function testNextToken()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    public function testFind()
    {
        $scanner = new Scanner(new File('testFiles/find_1'));
        $method  = new \ReflectionMethod($scanner, 'find');
        $method->setAccessible(true);

        $this->assertEquals('<p>a</p>', $method->invoke($scanner, '<php:'));
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testFindArgumentException()
    {
        $scanner = new Scanner(new File('testFiles/find_1'));
        $method  = new \ReflectionMethod($scanner, 'find');
        $method->setAccessible(true);

        $this->assertFalse($method->invoke($scanner, ''));
    }

    public function testFindNotFound()
    {
        $scanner = new Scanner(new File('testFiles/find_1'));
        $method  = new \ReflectionMethod($scanner, 'find');
        $method->setAccessible(true);

        $this->assertFalse($method->invoke($scanner, '<my:'));
    }
}
?>
